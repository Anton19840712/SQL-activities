WITH t1 as(
SELECT 
	calendar_year, 
	calendar_quarter_desc, 
	prod_category, 
	SUM(amount_sold) as "sales$",
	case when right(calendar_quarter_desc, 1) ='1' then 'N/A' ELSE
	TO_CHAR(sum(s.amount_sold)/FIRST_VALUE(sum(s.amount_sold)) OVER (PARTITION BY prod_category ORDER BY calendar_quarter_desc)*100 -100, '9,999,999,999.99')||'%' END AS "diff_percent",
	sum (sum(s.amount_sold)) OVER (order BY calendar_quarter_desc groups BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS "cum_sum$"
FROM sh.sales s 
	JOIN sh.times t ON s.time_id = t.time_id 
	JOIN sh.products p ON s.prod_id = p.prod_id 
	JOIN sh.channels c ON c.channel_id = s.channel_id 
	WHERE calendar_year IN (1999)
	AND prod_category IN ('Electronics', 'Hardware', 'Software/Other')
	AND channel_desc IN ('Partners','Internet')
	GROUP BY calendar_year, calendar_quarter_desc, prod_category
UNION
SELECT 
	calendar_year, 
	calendar_quarter_desc, 
	prod_category, 
	SUM(amount_sold) as "sales$",
	case when right(calendar_quarter_desc, 1) ='1' then 'N/A' ELSE
	TO_CHAR(sum(s.amount_sold)/FIRST_VALUE(sum(s.amount_sold)) OVER (PARTITION BY prod_category ORDER BY calendar_quarter_desc)*100 -100, '9,999,999,999.99')||'%' END AS "diff_percent",
	sum (sum(s.amount_sold)) OVER (order BY calendar_quarter_desc groups BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS "cum_sum$"
FROM sh.sales s 
	JOIN sh.times t ON s.time_id = t.time_id 
	JOIN sh.products p ON s.prod_id = p.prod_id 
	JOIN sh.channels c ON c.channel_id = s.channel_id 
	WHERE calendar_year IN (2000)
	AND prod_category IN ('Electronics', 'Hardware', 'Software/Other')
	AND channel_desc IN ('Partners','Internet')
	GROUP BY calendar_year, calendar_quarter_desc, prod_category
ORDER BY prod_category)
SELECT * FROM t1 ORDER BY calendar_quarter_desc;